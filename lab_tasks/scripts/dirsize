#!/bin/bash
#
# Print the total size of a directory
# by recursively adding the size of all files
# in it. Prints for multiple directories.
# Contributed by: TA Sayan Ghosh
#
calc (){
	rv=$(echo "scale=2;$1" | bc)
	echo "${rv%.00}"
}

help(){
	echo -e "Usage: $(basename "$0") [OPTION]... DIRECTORY...
Print the cumulative size of all files inside DIRECTORY(ies)

		-h, --help	display this help and exit
		-c		show number of files, directories, and total files"
	exit 0
}

if [ $# == 0 ]
then
	echo "dirsize: missing argument" && exit 1
fi

count=false
for dir in "$@"
do
	if grep -q "^-" <<<"$dir"
	then
		case "$dir" in
			-h) help	;;
			--help) help	;;
			-c) count=true	;;
			*) echo "dirsize: invalid option, type dirsize --help for help" && exit 1 ;
		esac
		continue
	fi

	if [ ! -d "$dir" ]
	then
		echo "dirsize: $dir is not a directory" && exit 1
	fi

	tmp="$(mktemp /tmp/dirsize.XXXXXX)"
	find "$dir" -type f -exec stat -c %s {} \; > "$tmp"

	if [ $count = true ]
	then
		numr=$(wc -l < "$tmp")
		numdf=$(find "$dir" -mindepth 1 -maxdepth 1 -type f | wc -l)
		numdd=$(find "$dir" -mindepth 1 -maxdepth 1 -type d | wc -l)
	fi

	size=$(add <"$tmp")
	rm -f "$tmp"

	tb=1099511627776
	gb=1073741824
	mb=1048576
	kb=1024

	if [[ $size -ge $tb ]]
	then
		output="$(calc "$size/$tb") TB"
	elif [[ $size -ge $gb ]]
	then
		output="$(calc "$size/$gb") GB"
	elif [[ $size -ge $mb ]]
	then
		output="$(calc "$size/$mb") MB"
	elif [[ $size -ge $kb ]]
	then
		output="$(calc "$size/$kb") KB"
	else
		output="$size bytes"
	fi

	if [ $count = true ]
	then
		output+=" (files: $numdf, dir: $numdd, allfiles: $numr)"
	fi
	echo "$dir: $output"

done
